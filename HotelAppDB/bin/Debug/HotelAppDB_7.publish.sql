/*
Deployment script for HotelAppDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "HotelAppDB"
:setvar DefaultFilePrefix "HotelAppDB"
:setvar DefaultDataPath "C:\ProgramData\SOLIDWORKS Electrical\MSSQL12.TEW_SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\ProgramData\SOLIDWORKS Electrical\MSSQL12.TEW_SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[Bookings].[GuestsId] is being dropped, data loss could occur.

The column [dbo].[Bookings].[GuestId] on table [dbo].[Bookings] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

--IF EXISTS (select top 1 1 from [dbo].[Bookings])
--    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column RoomNumber in table [dbo].[Rooms] is currently  NCHAR (10) NOT NULL but is being changed to  VARCHAR (10) NOT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  VARCHAR (10) NOT NULL.
*/

IF EXISTS (select top 1 1 from [dbo].[Rooms])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column Title in table [dbo].[RoomTypes] is currently  NVARCHAR (100) NOT NULL but is being changed to  NVARCHAR (50) NOT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  NVARCHAR (50) NOT NULL.
*/

IF EXISTS (select top 1 1 from [dbo].[RoomTypes])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Starting rebuilding table [dbo].[Bookings]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Bookings] (
    [Id]        INT   IDENTITY (1, 1) NOT NULL,
    [RoomId]    INT   NOT NULL,
    [GuestId]   INT   NOT NULL,
    [StartDate] DATE  NOT NULL,
    [EndDate]   DATE  NOT NULL,
    [CheckedIn] BIT   DEFAULT 0 NOT NULL,
    [TotalCost] MONEY NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Bookings])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Bookings] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Bookings] ([Id], [RoomId], [StartDate], [EndDate], [CheckedIn], [TotalCost])
        SELECT   [Id],
                 [RoomId],
                 [StartDate],
                 [EndDate],
                 [CheckedIn],
                 [TotalCost]
        FROM     [dbo].[Bookings]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Bookings] OFF;
    END

DROP TABLE [dbo].[Bookings];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Bookings]', N'Bookings';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering Table [dbo].[Rooms]...';


GO
ALTER TABLE [dbo].[Rooms] ALTER COLUMN [RoomNumber] VARCHAR (10) NOT NULL;


GO
PRINT N'Altering Table [dbo].[RoomTypes]...';


GO
ALTER TABLE [dbo].[RoomTypes] ALTER COLUMN [Description] NVARCHAR (2000) NOT NULL;

ALTER TABLE [dbo].[RoomTypes] ALTER COLUMN [Title] NVARCHAR (50) NOT NULL;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Bookings_Rooms]...';


GO
ALTER TABLE [dbo].[Bookings] WITH NOCHECK
    ADD CONSTRAINT [FK_Bookings_Rooms] FOREIGN KEY ([RoomId]) REFERENCES [dbo].[Rooms] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Bookings_Guests]...';


GO
ALTER TABLE [dbo].[Bookings] WITH NOCHECK
    ADD CONSTRAINT [FK_Bookings_Guests] FOREIGN KEY ([GuestId]) REFERENCES [dbo].[Guests] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Rooms_RoomTypes]...';


GO
ALTER TABLE [dbo].[Rooms] WITH NOCHECK
    ADD CONSTRAINT [FK_Rooms_RoomTypes] FOREIGN KEY ([RoomTypeId]) REFERENCES [dbo].[RoomTypes] ([Id]);


GO
PRINT N'Altering Procedure [dbo].[spBookings_Insert]...';


GO
ALTER PROCEDURE [dbo].[spBookings_Insert]
	@roomId int,
	@guestId int,
	@startDate date,
	@endDate date,
	@totalCost money
AS
begin
	set nocount on;

	insert into dbo.Bookings(RoomId, GuestId, StartDate, EndDate, TotalCost)
	values (@roomId, @guestId, @startDate, @endDate, @totalCost);
end
GO
PRINT N'Altering Procedure [dbo].[spBookings_Search]...';


GO
ALTER PROCEDURE [dbo].[spBookings_Search]
	@lastName nvarchar(50),
	@startDate date
AS
begin
	set nocount on;

	select [b].[Id], [b].[RoomId], [b].[GuestId], [b].[StartDate], [b].[EndDate], 
		[b].[CheckedIn], [b].[TotalCost], [g].[FirstName], [g].[LastName], 
		[r].[RoomNumber], [r].[RoomTypeId], [rt].[Title], [rt].[Description], 
		[rt].[Price]
	from dbo.Bookings b
	inner join dbo.Guests g on b.GuestId = g.Id
	inner join dbo.Rooms r on b.RoomId = r.Id
	inner join dbo.RoomTypes rt on r.RoomTypeId = rt.Id
	where b.StartDate = @startDate and g.LastName = @lastName;
end
GO
PRINT N'Creating Procedure [dbo].[spBookings_CheckIn]...';


GO
CREATE PROCEDURE [dbo].[spBookings_CheckIn]
	@Id int
AS
begin
	set nocount on;

	update dbo.Bookings
	set CheckedIn = 1
	where Id = @Id;
end
GO
PRINT N'Refreshing Procedure [dbo].[spRooms_GetAvailableRooms]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spRooms_GetAvailableRooms]';


GO
PRINT N'Refreshing Procedure [dbo].[spRoomTypes_GetAvailableTypes]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spRoomTypes_GetAvailableTypes]';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
if not exists (select 1 from dbo.RoomTypes)
begin
    insert into dbo.RoomTypes(Title, Description, Price)
    values ('King Size Bed', 'A room with a king-size bed and a window.', 100),
    ('Two Queen Size Beds', 'A room with two queen-size beds and a window.', 115),
    ('Executive Suite', 'Two rooms, each with a king-size bed and a window.', 205);
end

if not exists (select 1 from dbo.Rooms)
begin
    declare @roomId1 int;
    declare @roomId2 int;
    declare @roomId3 int;

    select @roomId1 = Id from dbo.RoomTypes where Title = 'King Size Bed';
    select @roomId2 = Id from dbo.RoomTypes where Title = 'Two Queen Size Beds';
    select @roomId3 = Id from dbo.RoomTypes where Title = 'Executive Suite';

    insert into dbo.Rooms (RoomNumber, RoomTypeId)
    values ('101', @roomId1),
    ('102', @roomId1),
    ('103', @roomId1),
    ('201', @roomId2),
    ('202', @roomId2),
    ('301', @roomId3);
end
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Bookings] WITH CHECK CHECK CONSTRAINT [FK_Bookings_Rooms];

ALTER TABLE [dbo].[Bookings] WITH CHECK CHECK CONSTRAINT [FK_Bookings_Guests];

ALTER TABLE [dbo].[Rooms] WITH CHECK CHECK CONSTRAINT [FK_Rooms_RoomTypes];


GO
PRINT N'Update complete.';


GO
